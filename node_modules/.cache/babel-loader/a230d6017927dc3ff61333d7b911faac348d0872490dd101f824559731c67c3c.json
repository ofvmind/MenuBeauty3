{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\projects\\\\menu-type-3\\\\src\\\\components\\\\UI\\\\Carousel\\\\Carousel.jsx\",\n  _s = $RefreshSig$();\nimport Flickity from \"react-flickity-component\";\nimport \"./flickity.css\";\nimport cl from \"./Carousel.module.scss\";\nimport p1 from \"../../../assets/images/interior/1.jpg\";\nimport p2 from \"../../../assets/images/interior/2.webp\";\nimport p3 from \"../../../assets/images/interior/3.jpg\";\nimport ProductModal from \"../Modals/ProductModal/ProductModal\";\nimport { useContext, useState } from \"react\";\nimport { AppContext } from \"../../../context/AppContext\";\nimport { pizza } from \"../../MenuComponents/products\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst hotProduct = pizza[1];\nconst plates = [{\n  img: p1,\n  text: \"MarrySMILE\"\n}, {\n  img: hotProduct.image,\n  text: \"Меню\",\n  product: hotProduct\n}, {\n  img: p3,\n  text: \"Меню\"\n}];\nconst flickityOptions = {\n  initialIndex: 2,\n  wrapAround: true,\n  autoPlay: true,\n  prevNextButtons: true\n};\nconst Carousel = () => {\n  _s();\n  const {\n    isModalOpen,\n    setIsModalOpen\n  } = useContext(AppContext);\n  const [isProduct, setIsProduct] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cl.slider,\n    children: [/*#__PURE__*/_jsxDEV(Flickity, {\n      className: \"slider\",\n      elementType: \"div\",\n      disableImagesLoaded: false,\n      options: flickityOptions,\n      reloadOnUpdate: true,\n      static: true,\n      children: plates.map(plate => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cl.plate,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              if (plate.product) {\n                setIsModalOpen(true);\n                setIsProduct(plate.product);\n              }\n            },\n            className: cl.plateImg,\n            style: {\n              backgroundImage: `url(${plate.img})`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: plate.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, plate.img, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductModal, {\n      visible: isModalOpen,\n      setVisible: setIsModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel, \"IID8qopgP53tjChztwCnG7JyE6o=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["Flickity","cl","p1","p2","p3","ProductModal","useContext","useState","AppContext","pizza","jsxDEV","_jsxDEV","Fragment","_Fragment","hotProduct","plates","img","text","image","product","flickityOptions","initialIndex","wrapAround","autoPlay","prevNextButtons","Carousel","_s","isModalOpen","setIsModalOpen","isProduct","setIsProduct","className","slider","children","elementType","disableImagesLoaded","options","reloadOnUpdate","static","map","plate","onClick","plateImg","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","visible","setVisible","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/projects/menu-type-3/src/components/UI/Carousel/Carousel.jsx"],"sourcesContent":["import Flickity from \"react-flickity-component\";\r\nimport \"./flickity.css\";\r\nimport cl from \"./Carousel.module.scss\";\r\nimport p1 from \"../../../assets/images/interior/1.jpg\";\r\nimport p2 from \"../../../assets/images/interior/2.webp\";\r\nimport p3 from \"../../../assets/images/interior/3.jpg\";\r\nimport ProductModal from \"../Modals/ProductModal/ProductModal\";\r\nimport { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport { pizza } from \"../../MenuComponents/products\";\r\n\r\nconst hotProduct = pizza[1];\r\n\r\nconst plates = [\r\n  { img: p1, text: \"MarrySMILE\" },\r\n  { img: hotProduct.image, text: \"Меню\", product: hotProduct },\r\n  { img: p3, text: \"Меню\" },\r\n];\r\n\r\nconst flickityOptions = {\r\n  initialIndex: 2,\r\n  wrapAround: true,\r\n  autoPlay: true,\r\n  prevNextButtons: true,\r\n};\r\n\r\nconst Carousel = () => {\r\n  const { isModalOpen, setIsModalOpen } = useContext(AppContext);\r\n  const [isProduct, setIsProduct] = useState(null);\r\n\r\n  return (\r\n    <div className={cl.slider}>\r\n      <Flickity\r\n        className=\"slider\"\r\n        elementType=\"div\"\r\n        disableImagesLoaded={false}\r\n        options={flickityOptions}\r\n        reloadOnUpdate\r\n        static\r\n      >\r\n        {plates.map((plate) => (\r\n          <div className={cl.plate} key={plate.img}>\r\n            <>\r\n              <div\r\n                onClick={() => {\r\n                  if (plate.product) {\r\n                    setIsModalOpen(true);\r\n                    setIsProduct(plate.product);\r\n                  }\r\n                }}\r\n                className={cl.plateImg}\r\n                style={{\r\n                  backgroundImage: `url(${plate.img})`,\r\n                }}\r\n              >\r\n                <p>{plate.text}</p>\r\n              </div>\r\n            </>\r\n          </div>\r\n        ))}\r\n      </Flickity>\r\n      <ProductModal visible={isModalOpen} setVisible={setIsModalOpen} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}