{"ast":null,"code":"import o, { Component as h } from \"react\";\nimport { createPortal as y } from \"react-dom\";\nimport a from \"imagesloaded\";\nimport s from \"prop-types\";\nconst u = !!(typeof window < \"u\" && window.document && window.document.createElement);\nclass r extends h {\n  constructor(e) {\n    super(e), this.state = {\n      flickityReady: !1,\n      flickityCreated: !1,\n      cellCount: 0\n    }, this.carousel = null, this.flkty = null;\n  }\n  static getDerivedStateFromProps(e, t) {\n    const i = o.Children.count(e.children);\n    return i !== t.cellCount ? {\n      flickityReady: !1,\n      cellCount: i\n    } : null;\n  }\n  componentDidUpdate(e, t) {\n    if (!this.flkty) return;\n    const {\n        children: i,\n        options: {\n          draggable: l,\n          initialIndex: n\n        },\n        reloadOnUpdate: c,\n        disableImagesLoaded: d\n      } = this.props,\n      {\n        flickityReady: f\n      } = this.state;\n    if (c || !t.flickityReady && f) {\n      const p = this.flkty.isActive;\n      this.flkty.deactivate(), this.flkty.selectedIndex = n || 0, this.flkty.options.draggable = l === void 0 ? i ? i.length > 1 : !1 : l, p && this.flkty.activate(), !d && this.carousel && a(this.carousel, () => {\n        this.flkty.reloadCells();\n      });\n    } else this.flkty.reloadCells();\n  }\n  async componentDidMount() {\n    if (!u || !this.carousel) return null;\n    const e = (await import(\"flickity\")).default,\n      {\n        flickityRef: t,\n        options: i\n      } = this.props;\n    this.flkty = new e(this.carousel, i), t && t(this.flkty), this.props.static ? this.setReady() : this.setState({\n      flickityCreated: !0\n    });\n  }\n  setReady() {\n    if (this.state.flickityReady) return;\n    const e = () => this.setState({\n      flickityReady: !0\n    });\n    this.props.disableImagesLoaded ? e() : a(this.carousel, e);\n  }\n  renderPortal() {\n    if (!this.carousel) return null;\n    const e = this.carousel.querySelector(\".flickity-slider\");\n    if (e) {\n      const t = y(this.props.children, e);\n      return setTimeout(() => this.setReady(), 0), t;\n    }\n  }\n  render() {\n    return o.createElement(this.props.elementType, {\n      className: this.props.className,\n      ref: e => {\n        this.carousel = e;\n      }\n    }, this.props.static ? this.props.children : this.renderPortal());\n  }\n}\nr.propTypes = {\n  children: s.array,\n  className: s.string,\n  disableImagesLoaded: s.bool,\n  elementType: s.string,\n  flickityRef: s.func,\n  options: s.object,\n  reloadOnUpdate: s.bool,\n  static: s.bool\n};\nr.defaultProps = {\n  className: \"\",\n  disableImagesLoaded: !1,\n  elementType: \"div\",\n  options: {},\n  reloadOnUpdate: !1,\n  static: !1\n};\nexport { r as default };","map":{"version":3,"names":["u","window","document","createElement","r","h","constructor","e","state","flickityReady","flickityCreated","cellCount","carousel","flkty","getDerivedStateFromProps","t","i","o","Children","count","children","componentDidUpdate","options","draggable","l","initialIndex","n","reloadOnUpdate","c","disableImagesLoaded","d","props","f","p","isActive","deactivate","selectedIndex","length","activate","a","reloadCells","componentDidMount","default","flickityRef","static","setReady","setState","setFlickityToReady","renderPortal","querySelector","y","setTimeout","render","elementType","className","ref","propTypes","s","array","string","bool","func","object","defaultProps"],"sources":["C:\\Users\\user\\Desktop\\projects\\MenuBeauty3\\node_modules\\react-flickity-component\\src\\index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport imagesloaded from 'imagesloaded';\nimport PropTypes from 'prop-types';\n\nconst canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nclass FlickityComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      flickityReady: false,\n      flickityCreated: false,\n      cellCount: 0,\n    };\n\n    this.carousel = null;\n    this.flkty = null;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const cellCount = React.Children.count(props.children);\n    if (cellCount !== state.cellCount)\n      return { flickityReady: false, cellCount };\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!this.flkty) return;\n    const {\n      children,\n      options: { draggable, initialIndex },\n      reloadOnUpdate,\n      disableImagesLoaded,\n    } = this.props;\n    const { flickityReady } = this.state;\n    if (reloadOnUpdate || (!prevState.flickityReady && flickityReady)) {\n      const isActive = this.flkty.isActive;\n      this.flkty.deactivate();\n      this.flkty.selectedIndex = initialIndex || 0;\n      this.flkty.options.draggable =\n        draggable === undefined\n          ? children\n            ? children.length > 1\n            : false\n          : draggable;\n      if (isActive) this.flkty.activate();\n      if (!disableImagesLoaded && this.carousel) {\n        imagesloaded(this.carousel, () => {\n          this.flkty.reloadCells();\n        });\n      }\n    } else {\n      this.flkty.reloadCells();\n    }\n  }\n\n  async componentDidMount() {\n    if (!canUseDOM || !this.carousel) return null;\n    const Flickity = (await import('flickity')).default;\n    const { flickityRef, options } = this.props;\n    this.flkty = new Flickity(this.carousel, options);\n    if (flickityRef) flickityRef(this.flkty);\n    if (this.props.static) {\n      this.setReady();\n    } else {\n      this.setState({ flickityCreated: true });\n    }\n  }\n\n  setReady() {\n    if (this.state.flickityReady) return;\n    const setFlickityToReady = () => this.setState({ flickityReady: true });\n    if (this.props.disableImagesLoaded) setFlickityToReady();\n    else imagesloaded(this.carousel, setFlickityToReady);\n  }\n\n  renderPortal() {\n    if (!this.carousel) return null;\n    const mountNode = this.carousel.querySelector('.flickity-slider');\n    if (mountNode) {\n      const element = createPortal(this.props.children, mountNode);\n      setTimeout(() => this.setReady(), 0);\n      return element;\n    }\n  }\n\n  render() {\n    return React.createElement(\n      this.props.elementType,\n      {\n        className: this.props.className,\n        ref: (c) => {\n          this.carousel = c;\n        },\n      },\n      this.props.static ? this.props.children : this.renderPortal()\n    );\n  }\n}\n\nFlickityComponent.propTypes = {\n  children: PropTypes.array,\n  className: PropTypes.string,\n  disableImagesLoaded: PropTypes.bool,\n  elementType: PropTypes.string,\n  flickityRef: PropTypes.func,\n  options: PropTypes.object,\n  reloadOnUpdate: PropTypes.bool,\n  static: PropTypes.bool,\n};\n\nFlickityComponent.defaultProps = {\n  className: '',\n  disableImagesLoaded: false,\n  elementType: 'div',\n  options: {},\n  reloadOnUpdate: false,\n  static: false,\n};\n\nexport default FlickityComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}