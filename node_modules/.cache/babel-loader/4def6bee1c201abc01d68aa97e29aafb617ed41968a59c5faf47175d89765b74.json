{"ast":null,"code":"// Flickity main\n/* eslint-disable max-params */\n(function (window, factory) {\n  // universal module definition\n  if (typeof define == 'function' && define.amd) {\n    // AMD\n    define(['ev-emitter/ev-emitter', 'get-size/get-size', 'fizzy-ui-utils/utils', './cell', './slide', './animate'], function (EvEmitter, getSize, utils, Cell, Slide, animatePrototype) {\n      return factory(window, EvEmitter, getSize, utils, Cell, Slide, animatePrototype);\n    });\n  } else if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(window, require('ev-emitter'), require('get-size'), require('fizzy-ui-utils'), require('./cell'), require('./slide'), require('./animate'));\n  } else {\n    // browser global\n    var _Flickity = window.Flickity;\n    window.Flickity = factory(window, window.EvEmitter, window.getSize, window.fizzyUIUtils, _Flickity.Cell, _Flickity.Slide, _Flickity.animatePrototype);\n  }\n})(window, function factory(window, EvEmitter, getSize, utils, Cell, Slide, animatePrototype) {\n  /* eslint-enable max-params */\n  'use strict';\n\n  // vars\n  var jQuery = window.jQuery;\n  var getComputedStyle = window.getComputedStyle;\n  var console = window.console;\n  function moveElements(elems, toElem) {\n    elems = utils.makeArray(elems);\n    while (elems.length) {\n      toElem.appendChild(elems.shift());\n    }\n  }\n\n  // -------------------------- Flickity -------------------------- //\n\n  // globally unique identifiers\n  var GUID = 0;\n  // internal store of all Flickity intances\n  var instances = {};\n  function Flickity(element, options) {\n    var queryElement = utils.getQueryElement(element);\n    if (!queryElement) {\n      if (console) {\n        console.error('Bad element for Flickity: ' + (queryElement || element));\n      }\n      return;\n    }\n    this.element = queryElement;\n    // do not initialize twice on same element\n    if (this.element.flickityGUID) {\n      var instance = instances[this.element.flickityGUID];\n      if (instance) instance.option(options);\n      return instance;\n    }\n\n    // add jQuery\n    if (jQuery) {\n      this.$element = jQuery(this.element);\n    }\n    // options\n    this.options = utils.extend({}, this.constructor.defaults);\n    this.option(options);\n\n    // kick things off\n    this._create();\n  }\n  Flickity.defaults = {\n    accessibility: true,\n    // adaptiveHeight: false,\n    cellAlign: 'center',\n    // cellSelector: undefined,\n    // contain: false,\n    freeScrollFriction: 0.075,\n    // friction when free-scrolling\n    friction: 0.28,\n    // friction when selecting\n    namespaceJQueryEvents: true,\n    // initialIndex: 0,\n    percentPosition: true,\n    resize: true,\n    selectedAttraction: 0.025,\n    setGallerySize: true\n    // watchCSS: false,\n    // wrapAround: false\n  };\n\n  // hash of methods triggered on _create()\n  Flickity.createMethods = [];\n  var proto = Flickity.prototype;\n  // inherit EventEmitter\n  utils.extend(proto, EvEmitter.prototype);\n  proto._create = function () {\n    // add id for Flickity.data\n    var id = this.guid = ++GUID;\n    this.element.flickityGUID = id; // expando\n    instances[id] = this; // associate via id\n    // initial properties\n    this.selectedIndex = 0;\n    // how many frames slider has been in same position\n    this.restingFrames = 0;\n    // initial physics properties\n    this.x = 0;\n    this.velocity = 0;\n    this.originSide = this.options.rightToLeft ? 'right' : 'left';\n    // create viewport & slider\n    this.viewport = document.createElement('div');\n    this.viewport.className = 'flickity-viewport';\n    this._createSlider();\n    if (this.options.resize || this.options.watchCSS) {\n      window.addEventListener('resize', this);\n    }\n\n    // add listeners from on option\n    for (var eventName in this.options.on) {\n      var listener = this.options.on[eventName];\n      this.on(eventName, listener);\n    }\n    Flickity.createMethods.forEach(function (method) {\n      this[method]();\n    }, this);\n    if (this.options.watchCSS) {\n      this.watchCSS();\n    } else {\n      this.activate();\n    }\n  };\n\n  /**\n   * set options\n   * @param {Object} opts - options to extend\n   */\n  proto.option = function (opts) {\n    utils.extend(this.options, opts);\n  };\n  proto.activate = function () {\n    if (this.isActive) {\n      return;\n    }\n    this.isActive = true;\n    this.element.classList.add('flickity-enabled');\n    if (this.options.rightToLeft) {\n      this.element.classList.add('flickity-rtl');\n    }\n    this.getSize();\n    // move initial cell elements so they can be loaded as cells\n    var cellElems = this._filterFindCellElements(this.element.children);\n    moveElements(cellElems, this.slider);\n    this.viewport.appendChild(this.slider);\n    this.element.appendChild(this.viewport);\n    // get cells from children\n    this.reloadCells();\n    if (this.options.accessibility) {\n      // allow element to focusable\n      this.element.tabIndex = 0;\n      // listen for key presses\n      this.element.addEventListener('keydown', this);\n    }\n    this.emitEvent('activate');\n    this.selectInitialIndex();\n    // flag for initial activation, for using initialIndex\n    this.isInitActivated = true;\n    // ready event. #493\n    this.dispatchEvent('ready');\n  };\n\n  // slider positions the cells\n  proto._createSlider = function () {\n    // slider element does all the positioning\n    var slider = document.createElement('div');\n    slider.className = 'flickity-slider';\n    slider.style[this.originSide] = 0;\n    this.slider = slider;\n  };\n  proto._filterFindCellElements = function (elems) {\n    return utils.filterFindElements(elems, this.options.cellSelector);\n  };\n\n  // goes through all children\n  proto.reloadCells = function () {\n    // collection of item elements\n    this.cells = this._makeCells(this.slider.children);\n    this.positionCells();\n    this._getWrapShiftCells();\n    this.setGallerySize();\n  };\n\n  /**\n   * turn elements into Flickity.Cells\n   * @param {[Array, NodeList, HTMLElement]} elems - elements to make into cells\n   * @returns {Array} items - collection of new Flickity Cells\n   */\n  proto._makeCells = function (elems) {\n    var cellElems = this._filterFindCellElements(elems);\n\n    // create new Flickity for collection\n    var cells = cellElems.map(function (cellElem) {\n      return new Cell(cellElem, this);\n    }, this);\n    return cells;\n  };\n  proto.getLastCell = function () {\n    return this.cells[this.cells.length - 1];\n  };\n  proto.getLastSlide = function () {\n    return this.slides[this.slides.length - 1];\n  };\n\n  // positions all cells\n  proto.positionCells = function () {\n    // size all cells\n    this._sizeCells(this.cells);\n    // position all cells\n    this._positionCells(0);\n  };\n\n  /**\n   * position certain cells\n   * @param {Integer} index - which cell to start with\n   */\n  proto._positionCells = function (index) {\n    index = index || 0;\n    // also measure maxCellHeight\n    // start 0 if positioning all cells\n    this.maxCellHeight = index ? this.maxCellHeight || 0 : 0;\n    var cellX = 0;\n    // get cellX\n    if (index > 0) {\n      var startCell = this.cells[index - 1];\n      cellX = startCell.x + startCell.size.outerWidth;\n    }\n    var len = this.cells.length;\n    for (var i = index; i < len; i++) {\n      var cell = this.cells[i];\n      cell.setPosition(cellX);\n      cellX += cell.size.outerWidth;\n      this.maxCellHeight = Math.max(cell.size.outerHeight, this.maxCellHeight);\n    }\n    // keep track of cellX for wrap-around\n    this.slideableWidth = cellX;\n    // slides\n    this.updateSlides();\n    // contain slides target\n    this._containSlides();\n    // update slidesWidth\n    this.slidesWidth = len ? this.getLastSlide().target - this.slides[0].target : 0;\n  };\n\n  /**\n   * cell.getSize() on multiple cells\n   * @param {Array} cells - cells to size\n   */\n  proto._sizeCells = function (cells) {\n    cells.forEach(function (cell) {\n      cell.getSize();\n    });\n  };\n\n  // --------------------------  -------------------------- //\n\n  proto.updateSlides = function () {\n    this.slides = [];\n    if (!this.cells.length) {\n      return;\n    }\n    var slide = new Slide(this);\n    this.slides.push(slide);\n    var isOriginLeft = this.originSide == 'left';\n    var nextMargin = isOriginLeft ? 'marginRight' : 'marginLeft';\n    var canCellFit = this._getCanCellFit();\n    this.cells.forEach(function (cell, i) {\n      // just add cell if first cell in slide\n      if (!slide.cells.length) {\n        slide.addCell(cell);\n        return;\n      }\n      var slideWidth = slide.outerWidth - slide.firstMargin + (cell.size.outerWidth - cell.size[nextMargin]);\n      if (canCellFit.call(this, i, slideWidth)) {\n        slide.addCell(cell);\n      } else {\n        // doesn't fit, new slide\n        slide.updateTarget();\n        slide = new Slide(this);\n        this.slides.push(slide);\n        slide.addCell(cell);\n      }\n    }, this);\n    // last slide\n    slide.updateTarget();\n    // update .selectedSlide\n    this.updateSelectedSlide();\n  };\n  proto._getCanCellFit = function () {\n    var groupCells = this.options.groupCells;\n    if (!groupCells) {\n      return function () {\n        return false;\n      };\n    } else if (typeof groupCells == 'number') {\n      // group by number. 3 -> [0,1,2], [3,4,5], ...\n      var number = parseInt(groupCells, 10);\n      return function (i) {\n        return i % number !== 0;\n      };\n    }\n    // default, group by width of slide\n    // parse '75%\n    var percentMatch = typeof groupCells == 'string' && groupCells.match(/^(\\d+)%$/);\n    var percent = percentMatch ? parseInt(percentMatch[1], 10) / 100 : 1;\n    return function (i, slideWidth) {\n      /* eslint-disable-next-line no-invalid-this */\n      return slideWidth <= (this.size.innerWidth + 1) * percent;\n    };\n  };\n\n  // alias _init for jQuery plugin .flickity()\n  proto._init = proto.reposition = function () {\n    this.positionCells();\n    this.positionSliderAtSelected();\n  };\n  proto.getSize = function () {\n    this.size = getSize(this.element);\n    this.setCellAlign();\n    this.cursorPosition = this.size.innerWidth * this.cellAlign;\n  };\n  var cellAlignShorthands = {\n    // cell align, then based on origin side\n    center: {\n      left: 0.5,\n      right: 0.5\n    },\n    left: {\n      left: 0,\n      right: 1\n    },\n    right: {\n      right: 0,\n      left: 1\n    }\n  };\n  proto.setCellAlign = function () {\n    var shorthand = cellAlignShorthands[this.options.cellAlign];\n    this.cellAlign = shorthand ? shorthand[this.originSide] : this.options.cellAlign;\n  };\n  proto.setGallerySize = function () {\n    if (this.options.setGallerySize) {\n      var height = this.options.adaptiveHeight && this.selectedSlide ? this.selectedSlide.height : this.maxCellHeight;\n      this.viewport.style.height = height + 'px';\n    }\n  };\n  proto._getWrapShiftCells = function () {\n    // only for wrap-around\n    if (!this.options.wrapAround) {\n      return;\n    }\n    // unshift previous cells\n    this._unshiftCells(this.beforeShiftCells);\n    this._unshiftCells(this.afterShiftCells);\n    // get before cells\n    // initial gap\n    var gapX = this.cursorPosition;\n    var cellIndex = this.cells.length - 1;\n    this.beforeShiftCells = this._getGapCells(gapX, cellIndex, -1);\n    // get after cells\n    // ending gap between last cell and end of gallery viewport\n    gapX = this.size.innerWidth - this.cursorPosition;\n    // start cloning at first cell, working forwards\n    this.afterShiftCells = this._getGapCells(gapX, 0, 1);\n  };\n  proto._getGapCells = function (gapX, cellIndex, increment) {\n    // keep adding cells until the cover the initial gap\n    var cells = [];\n    while (gapX > 0) {\n      var cell = this.cells[cellIndex];\n      if (!cell) {\n        break;\n      }\n      cells.push(cell);\n      cellIndex += increment;\n      gapX -= cell.size.outerWidth;\n    }\n    return cells;\n  };\n\n  // ----- contain ----- //\n\n  // contain cell targets so no excess sliding\n  proto._containSlides = function () {\n    if (!this.options.contain || this.options.wrapAround || !this.cells.length) {\n      return;\n    }\n    var isRightToLeft = this.options.rightToLeft;\n    var beginMargin = isRightToLeft ? 'marginRight' : 'marginLeft';\n    var endMargin = isRightToLeft ? 'marginLeft' : 'marginRight';\n    var contentWidth = this.slideableWidth - this.getLastCell().size[endMargin];\n    // content is less than gallery size\n    var isContentSmaller = contentWidth < this.size.innerWidth;\n    // bounds\n    var beginBound = this.cursorPosition + this.cells[0].size[beginMargin];\n    var endBound = contentWidth - this.size.innerWidth * (1 - this.cellAlign);\n    // contain each cell target\n    this.slides.forEach(function (slide) {\n      if (isContentSmaller) {\n        // all cells fit inside gallery\n        slide.target = contentWidth * this.cellAlign;\n      } else {\n        // contain to bounds\n        slide.target = Math.max(slide.target, beginBound);\n        slide.target = Math.min(slide.target, endBound);\n      }\n    }, this);\n  };\n\n  // -----  ----- //\n\n  /**\n   * emits events via eventEmitter and jQuery events\n   * @param {String} type - name of event\n   * @param {Event} event - original event\n   * @param {Array} args - extra arguments\n   */\n  proto.dispatchEvent = function (type, event, args) {\n    var emitArgs = event ? [event].concat(args) : args;\n    this.emitEvent(type, emitArgs);\n    if (jQuery && this.$element) {\n      // default trigger with type if no event\n      type += this.options.namespaceJQueryEvents ? '.flickity' : '';\n      var $event = type;\n      if (event) {\n        // create jQuery event\n        var jQEvent = new jQuery.Event(event);\n        jQEvent.type = type;\n        $event = jQEvent;\n      }\n      this.$element.trigger($event, args);\n    }\n  };\n\n  // -------------------------- select -------------------------- //\n\n  /**\n   * @param {Integer} index - index of the slide\n   * @param {Boolean} isWrap - will wrap-around to last/first if at the end\n   * @param {Boolean} isInstant - will immediately set position at selected cell\n   */\n  proto.select = function (index, isWrap, isInstant) {\n    if (!this.isActive) {\n      return;\n    }\n    index = parseInt(index, 10);\n    this._wrapSelect(index);\n    if (this.options.wrapAround || isWrap) {\n      index = utils.modulo(index, this.slides.length);\n    }\n    // bail if invalid index\n    if (!this.slides[index]) {\n      return;\n    }\n    var prevIndex = this.selectedIndex;\n    this.selectedIndex = index;\n    this.updateSelectedSlide();\n    if (isInstant) {\n      this.positionSliderAtSelected();\n    } else {\n      this.startAnimation();\n    }\n    if (this.options.adaptiveHeight) {\n      this.setGallerySize();\n    }\n    // events\n    this.dispatchEvent('select', null, [index]);\n    // change event if new index\n    if (index != prevIndex) {\n      this.dispatchEvent('change', null, [index]);\n    }\n    // old v1 event name, remove in v3\n    this.dispatchEvent('cellSelect');\n  };\n\n  // wraps position for wrapAround, to move to closest slide. #113\n  proto._wrapSelect = function (index) {\n    var len = this.slides.length;\n    var isWrapping = this.options.wrapAround && len > 1;\n    if (!isWrapping) {\n      return index;\n    }\n    var wrapIndex = utils.modulo(index, len);\n    // go to shortest\n    var delta = Math.abs(wrapIndex - this.selectedIndex);\n    var backWrapDelta = Math.abs(wrapIndex + len - this.selectedIndex);\n    var forewardWrapDelta = Math.abs(wrapIndex - len - this.selectedIndex);\n    if (!this.isDragSelect && backWrapDelta < delta) {\n      index += len;\n    } else if (!this.isDragSelect && forewardWrapDelta < delta) {\n      index -= len;\n    }\n    // wrap position so slider is within normal area\n    if (index < 0) {\n      this.x -= this.slideableWidth;\n    } else if (index >= len) {\n      this.x += this.slideableWidth;\n    }\n  };\n  proto.previous = function (isWrap, isInstant) {\n    this.select(this.selectedIndex - 1, isWrap, isInstant);\n  };\n  proto.next = function (isWrap, isInstant) {\n    this.select(this.selectedIndex + 1, isWrap, isInstant);\n  };\n  proto.updateSelectedSlide = function () {\n    var slide = this.slides[this.selectedIndex];\n    // selectedIndex could be outside of slides, if triggered before resize()\n    if (!slide) {\n      return;\n    }\n    // unselect previous selected slide\n    this.unselectSelectedSlide();\n    // update new selected slide\n    this.selectedSlide = slide;\n    slide.select();\n    this.selectedCells = slide.cells;\n    this.selectedElements = slide.getCellElements();\n    // HACK: selectedCell & selectedElement is first cell in slide, backwards compatibility\n    // Remove in v3?\n    this.selectedCell = slide.cells[0];\n    this.selectedElement = this.selectedElements[0];\n  };\n  proto.unselectSelectedSlide = function () {\n    if (this.selectedSlide) {\n      this.selectedSlide.unselect();\n    }\n  };\n  proto.selectInitialIndex = function () {\n    var initialIndex = this.options.initialIndex;\n    // already activated, select previous selectedIndex\n    if (this.isInitActivated) {\n      this.select(this.selectedIndex, false, true);\n      return;\n    }\n    // select with selector string\n    if (initialIndex && typeof initialIndex == 'string') {\n      var cell = this.queryCell(initialIndex);\n      if (cell) {\n        this.selectCell(initialIndex, false, true);\n        return;\n      }\n    }\n    var index = 0;\n    // select with number\n    if (initialIndex && this.slides[initialIndex]) {\n      index = initialIndex;\n    }\n    // select instantly\n    this.select(index, false, true);\n  };\n\n  /**\n   * select slide from number or cell element\n   * @param {[Element, Number]} value - zero-based index or element to select\n   * @param {Boolean} isWrap - enables wrapping around for extra index\n   * @param {Boolean} isInstant - disables slide animation\n   */\n  proto.selectCell = function (value, isWrap, isInstant) {\n    // get cell\n    var cell = this.queryCell(value);\n    if (!cell) {\n      return;\n    }\n    var index = this.getCellSlideIndex(cell);\n    this.select(index, isWrap, isInstant);\n  };\n  proto.getCellSlideIndex = function (cell) {\n    // get index of slides that has cell\n    for (var i = 0; i < this.slides.length; i++) {\n      var slide = this.slides[i];\n      var index = slide.cells.indexOf(cell);\n      if (index != -1) {\n        return i;\n      }\n    }\n  };\n\n  // -------------------------- get cells -------------------------- //\n\n  /**\n   * get Flickity.Cell, given an Element\n   * @param {Element} elem - matching cell element\n   * @returns {Flickity.Cell} cell - matching cell\n   */\n  proto.getCell = function (elem) {\n    // loop through cells to get the one that matches\n    for (var i = 0; i < this.cells.length; i++) {\n      var cell = this.cells[i];\n      if (cell.element == elem) {\n        return cell;\n      }\n    }\n  };\n\n  /**\n   * get collection of Flickity.Cells, given Elements\n   * @param {[Element, Array, NodeList]} elems - multiple elements\n   * @returns {Array} cells - Flickity.Cells\n   */\n  proto.getCells = function (elems) {\n    elems = utils.makeArray(elems);\n    var cells = [];\n    elems.forEach(function (elem) {\n      var cell = this.getCell(elem);\n      if (cell) {\n        cells.push(cell);\n      }\n    }, this);\n    return cells;\n  };\n\n  /**\n   * get cell elements\n   * @returns {Array} cellElems\n   */\n  proto.getCellElements = function () {\n    return this.cells.map(function (cell) {\n      return cell.element;\n    });\n  };\n\n  /**\n   * get parent cell from an element\n   * @param {Element} elem - child element\n   * @returns {Flickit.Cell} cell - parent cell\n   */\n  proto.getParentCell = function (elem) {\n    // first check if elem is cell\n    var cell = this.getCell(elem);\n    if (cell) {\n      return cell;\n    }\n    // try to get parent cell elem\n    elem = utils.getParent(elem, '.flickity-slider > *');\n    return this.getCell(elem);\n  };\n\n  /**\n   * get cells adjacent to a slide\n   * @param {Integer} adjCount - number of adjacent slides\n   * @param {Integer} index - index of slide to start\n   * @returns {Array} cells - array of Flickity.Cells\n   */\n  proto.getAdjacentCellElements = function (adjCount, index) {\n    if (!adjCount) {\n      return this.selectedSlide.getCellElements();\n    }\n    index = index === undefined ? this.selectedIndex : index;\n    var len = this.slides.length;\n    if (1 + adjCount * 2 >= len) {\n      return this.getCellElements();\n    }\n    var cellElems = [];\n    for (var i = index - adjCount; i <= index + adjCount; i++) {\n      var slideIndex = this.options.wrapAround ? utils.modulo(i, len) : i;\n      var slide = this.slides[slideIndex];\n      if (slide) {\n        cellElems = cellElems.concat(slide.getCellElements());\n      }\n    }\n    return cellElems;\n  };\n\n  /**\n   * select slide from number or cell element\n   * @param {[Element, String, Number]} selector - element, selector string, or index\n   * @returns {Flickity.Cell} - matching cell\n   */\n  proto.queryCell = function (selector) {\n    if (typeof selector == 'number') {\n      // use number as index\n      return this.cells[selector];\n    }\n    if (typeof selector == 'string') {\n      // do not select invalid selectors from hash: #123, #/. #791\n      if (selector.match(/^[#.]?[\\d/]/)) {\n        return;\n      }\n      // use string as selector, get element\n      selector = this.element.querySelector(selector);\n    }\n    // get cell from element\n    return this.getCell(selector);\n  };\n\n  // -------------------------- events -------------------------- //\n\n  proto.uiChange = function () {\n    this.emitEvent('uiChange');\n  };\n\n  // keep focus on element when child UI elements are clicked\n  proto.childUIPointerDown = function (event) {\n    // HACK iOS does not allow touch events to bubble up?!\n    if (event.type != 'touchstart') {\n      event.preventDefault();\n    }\n    this.focus();\n  };\n\n  // ----- resize ----- //\n\n  proto.onresize = function () {\n    this.watchCSS();\n    this.resize();\n  };\n  utils.debounceMethod(Flickity, 'onresize', 150);\n  proto.resize = function () {\n    // #1177 disable resize behavior when animating or dragging for iOS 15\n    if (!this.isActive || this.isAnimating || this.isDragging) {\n      return;\n    }\n    this.getSize();\n    // wrap values\n    if (this.options.wrapAround) {\n      this.x = utils.modulo(this.x, this.slideableWidth);\n    }\n    this.positionCells();\n    this._getWrapShiftCells();\n    this.setGallerySize();\n    this.emitEvent('resize');\n    // update selected index for group slides, instant\n    // TODO: position can be lost between groups of various numbers\n    var selectedElement = this.selectedElements && this.selectedElements[0];\n    this.selectCell(selectedElement, false, true);\n  };\n\n  // watches the :after property, activates/deactivates\n  proto.watchCSS = function () {\n    var watchOption = this.options.watchCSS;\n    if (!watchOption) {\n      return;\n    }\n    var afterContent = getComputedStyle(this.element, ':after').content;\n    // activate if :after { content: 'flickity' }\n    if (afterContent.indexOf('flickity') != -1) {\n      this.activate();\n    } else {\n      this.deactivate();\n    }\n  };\n\n  // ----- keydown ----- //\n\n  // go previous/next if left/right keys pressed\n  proto.onkeydown = function (event) {\n    // only work if element is in focus\n    var isNotFocused = document.activeElement && document.activeElement != this.element;\n    if (!this.options.accessibility || isNotFocused) {\n      return;\n    }\n    var handler = Flickity.keyboardHandlers[event.keyCode];\n    if (handler) {\n      handler.call(this);\n    }\n  };\n  Flickity.keyboardHandlers = {\n    // left arrow\n    37: function () {\n      var leftMethod = this.options.rightToLeft ? 'next' : 'previous';\n      this.uiChange();\n      this[leftMethod]();\n    },\n    // right arrow\n    39: function () {\n      var rightMethod = this.options.rightToLeft ? 'previous' : 'next';\n      this.uiChange();\n      this[rightMethod]();\n    }\n  };\n\n  // ----- focus ----- //\n\n  proto.focus = function () {\n    // TODO remove scrollTo once focus options gets more support\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus ...\n    //    #Browser_compatibility\n    var prevScrollY = window.pageYOffset;\n    this.element.focus({\n      preventScroll: true\n    });\n    // hack to fix scroll jump after focus, #76\n    if (window.pageYOffset != prevScrollY) {\n      window.scrollTo(window.pageXOffset, prevScrollY);\n    }\n  };\n\n  // -------------------------- destroy -------------------------- //\n\n  // deactivate all Flickity functionality, but keep stuff available\n  proto.deactivate = function () {\n    if (!this.isActive) {\n      return;\n    }\n    this.element.classList.remove('flickity-enabled');\n    this.element.classList.remove('flickity-rtl');\n    this.unselectSelectedSlide();\n    // destroy cells\n    this.cells.forEach(function (cell) {\n      cell.destroy();\n    });\n    this.element.removeChild(this.viewport);\n    // move child elements back into element\n    moveElements(this.slider.children, this.element);\n    if (this.options.accessibility) {\n      this.element.removeAttribute('tabIndex');\n      this.element.removeEventListener('keydown', this);\n    }\n    // set flags\n    this.isActive = false;\n    this.emitEvent('deactivate');\n  };\n  proto.destroy = function () {\n    this.deactivate();\n    window.removeEventListener('resize', this);\n    this.allOff();\n    this.emitEvent('destroy');\n    if (jQuery && this.$element) {\n      jQuery.removeData(this.element, 'flickity');\n    }\n    delete this.element.flickityGUID;\n    delete instances[this.guid];\n  };\n\n  // -------------------------- prototype -------------------------- //\n\n  utils.extend(proto, animatePrototype);\n\n  // -------------------------- extras -------------------------- //\n\n  /**\n   * get Flickity instance from element\n   * @param {[Element, String]} elem - element or selector string\n   * @returns {Flickity} - Flickity instance\n   */\n  Flickity.data = function (elem) {\n    elem = utils.getQueryElement(elem);\n    var id = elem && elem.flickityGUID;\n    return id && instances[id];\n  };\n  utils.htmlInit(Flickity, 'flickity');\n  if (jQuery && jQuery.bridget) {\n    jQuery.bridget('flickity', Flickity);\n  }\n\n  // set internal jQuery, for Webpack + jQuery v3, #478\n  Flickity.setJQuery = function (jq) {\n    jQuery = jq;\n  };\n  Flickity.Cell = Cell;\n  Flickity.Slide = Slide;\n  return Flickity;\n});","map":{"version":3,"names":["window","factory","define","amd","EvEmitter","getSize","utils","Cell","Slide","animatePrototype","module","exports","require","_Flickity","Flickity","fizzyUIUtils","jQuery","getComputedStyle","console","moveElements","elems","toElem","makeArray","length","appendChild","shift","GUID","instances","element","options","queryElement","getQueryElement","error","flickityGUID","instance","option","$element","extend","constructor","defaults","_create","accessibility","cellAlign","freeScrollFriction","friction","namespaceJQueryEvents","percentPosition","resize","selectedAttraction","setGallerySize","createMethods","proto","prototype","id","guid","selectedIndex","restingFrames","x","velocity","originSide","rightToLeft","viewport","document","createElement","className","_createSlider","watchCSS","addEventListener","eventName","on","listener","forEach","method","activate","opts","isActive","classList","add","cellElems","_filterFindCellElements","children","slider","reloadCells","tabIndex","emitEvent","selectInitialIndex","isInitActivated","dispatchEvent","style","filterFindElements","cellSelector","cells","_makeCells","positionCells","_getWrapShiftCells","map","cellElem","getLastCell","getLastSlide","slides","_sizeCells","_positionCells","index","maxCellHeight","cellX","startCell","size","outerWidth","len","i","cell","setPosition","Math","max","outerHeight","slideableWidth","updateSlides","_containSlides","slidesWidth","target","slide","push","isOriginLeft","nextMargin","canCellFit","_getCanCellFit","addCell","slideWidth","firstMargin","call","updateTarget","updateSelectedSlide","groupCells","number","parseInt","percentMatch","match","percent","innerWidth","_init","reposition","positionSliderAtSelected","setCellAlign","cursorPosition","cellAlignShorthands","center","left","right","shorthand","height","adaptiveHeight","selectedSlide","wrapAround","_unshiftCells","beforeShiftCells","afterShiftCells","gapX","cellIndex","_getGapCells","increment","contain","isRightToLeft","beginMargin","endMargin","contentWidth","isContentSmaller","beginBound","endBound","min","type","event","args","emitArgs","concat","$event","jQEvent","Event","trigger","select","isWrap","isInstant","_wrapSelect","modulo","prevIndex","startAnimation","isWrapping","wrapIndex","delta","abs","backWrapDelta","forewardWrapDelta","isDragSelect","previous","next","unselectSelectedSlide","selectedCells","selectedElements","getCellElements","selectedCell","selectedElement","unselect","initialIndex","queryCell","selectCell","value","getCellSlideIndex","indexOf","getCell","elem","getCells","getParentCell","getParent","getAdjacentCellElements","adjCount","undefined","slideIndex","selector","querySelector","uiChange","childUIPointerDown","preventDefault","focus","onresize","debounceMethod","isAnimating","isDragging","watchOption","afterContent","content","deactivate","onkeydown","isNotFocused","activeElement","handler","keyboardHandlers","keyCode","leftMethod","rightMethod","prevScrollY","pageYOffset","preventScroll","scrollTo","pageXOffset","remove","destroy","removeChild","removeAttribute","removeEventListener","allOff","removeData","data","htmlInit","bridget","setJQuery","jq"],"sources":["C:/Users/user/Desktop/projects/menu-type-3/node_modules/flickity/js/flickity.js"],"sourcesContent":["// Flickity main\n/* eslint-disable max-params */\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'ev-emitter/ev-emitter',\n      'get-size/get-size',\n      'fizzy-ui-utils/utils',\n      './cell',\n      './slide',\n      './animate',\n    ], function( EvEmitter, getSize, utils, Cell, Slide, animatePrototype ) {\n      return factory( window, EvEmitter, getSize, utils, Cell, Slide, animatePrototype );\n    } );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('ev-emitter'),\n        require('get-size'),\n        require('fizzy-ui-utils'),\n        require('./cell'),\n        require('./slide'),\n        require('./animate')\n    );\n  } else {\n    // browser global\n    var _Flickity = window.Flickity;\n\n    window.Flickity = factory(\n        window,\n        window.EvEmitter,\n        window.getSize,\n        window.fizzyUIUtils,\n        _Flickity.Cell,\n        _Flickity.Slide,\n        _Flickity.animatePrototype\n    );\n  }\n\n}( window, function factory( window, EvEmitter, getSize,\n    utils, Cell, Slide, animatePrototype ) {\n\n/* eslint-enable max-params */\n'use strict';\n\n// vars\nvar jQuery = window.jQuery;\nvar getComputedStyle = window.getComputedStyle;\nvar console = window.console;\n\nfunction moveElements( elems, toElem ) {\n  elems = utils.makeArray( elems );\n  while ( elems.length ) {\n    toElem.appendChild( elems.shift() );\n  }\n}\n\n// -------------------------- Flickity -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Flickity intances\nvar instances = {};\n\nfunction Flickity( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for Flickity: ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // do not initialize twice on same element\n  if ( this.element.flickityGUID ) {\n    var instance = instances[ this.element.flickityGUID ];\n    if ( instance ) instance.option( options );\n    return instance;\n  }\n\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // kick things off\n  this._create();\n}\n\nFlickity.defaults = {\n  accessibility: true,\n  // adaptiveHeight: false,\n  cellAlign: 'center',\n  // cellSelector: undefined,\n  // contain: false,\n  freeScrollFriction: 0.075, // friction when free-scrolling\n  friction: 0.28, // friction when selecting\n  namespaceJQueryEvents: true,\n  // initialIndex: 0,\n  percentPosition: true,\n  resize: true,\n  selectedAttraction: 0.025,\n  setGallerySize: true,\n  // watchCSS: false,\n  // wrapAround: false\n};\n\n// hash of methods triggered on _create()\nFlickity.createMethods = [];\n\nvar proto = Flickity.prototype;\n// inherit EventEmitter\nutils.extend( proto, EvEmitter.prototype );\n\nproto._create = function() {\n  // add id for Flickity.data\n  var id = this.guid = ++GUID;\n  this.element.flickityGUID = id; // expando\n  instances[ id ] = this; // associate via id\n  // initial properties\n  this.selectedIndex = 0;\n  // how many frames slider has been in same position\n  this.restingFrames = 0;\n  // initial physics properties\n  this.x = 0;\n  this.velocity = 0;\n  this.originSide = this.options.rightToLeft ? 'right' : 'left';\n  // create viewport & slider\n  this.viewport = document.createElement('div');\n  this.viewport.className = 'flickity-viewport';\n  this._createSlider();\n\n  if ( this.options.resize || this.options.watchCSS ) {\n    window.addEventListener( 'resize', this );\n  }\n\n  // add listeners from on option\n  for ( var eventName in this.options.on ) {\n    var listener = this.options.on[ eventName ];\n    this.on( eventName, listener );\n  }\n\n  Flickity.createMethods.forEach( function( method ) {\n    this[ method ]();\n  }, this );\n\n  if ( this.options.watchCSS ) {\n    this.watchCSS();\n  } else {\n    this.activate();\n  }\n\n};\n\n/**\n * set options\n * @param {Object} opts - options to extend\n */\nproto.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\nproto.activate = function() {\n  if ( this.isActive ) {\n    return;\n  }\n  this.isActive = true;\n  this.element.classList.add('flickity-enabled');\n  if ( this.options.rightToLeft ) {\n    this.element.classList.add('flickity-rtl');\n  }\n\n  this.getSize();\n  // move initial cell elements so they can be loaded as cells\n  var cellElems = this._filterFindCellElements( this.element.children );\n  moveElements( cellElems, this.slider );\n  this.viewport.appendChild( this.slider );\n  this.element.appendChild( this.viewport );\n  // get cells from children\n  this.reloadCells();\n\n  if ( this.options.accessibility ) {\n    // allow element to focusable\n    this.element.tabIndex = 0;\n    // listen for key presses\n    this.element.addEventListener( 'keydown', this );\n  }\n\n  this.emitEvent('activate');\n  this.selectInitialIndex();\n  // flag for initial activation, for using initialIndex\n  this.isInitActivated = true;\n  // ready event. #493\n  this.dispatchEvent('ready');\n};\n\n// slider positions the cells\nproto._createSlider = function() {\n  // slider element does all the positioning\n  var slider = document.createElement('div');\n  slider.className = 'flickity-slider';\n  slider.style[ this.originSide ] = 0;\n  this.slider = slider;\n};\n\nproto._filterFindCellElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.cellSelector );\n};\n\n// goes through all children\nproto.reloadCells = function() {\n  // collection of item elements\n  this.cells = this._makeCells( this.slider.children );\n  this.positionCells();\n  this._getWrapShiftCells();\n  this.setGallerySize();\n};\n\n/**\n * turn elements into Flickity.Cells\n * @param {[Array, NodeList, HTMLElement]} elems - elements to make into cells\n * @returns {Array} items - collection of new Flickity Cells\n */\nproto._makeCells = function( elems ) {\n  var cellElems = this._filterFindCellElements( elems );\n\n  // create new Flickity for collection\n  var cells = cellElems.map( function( cellElem ) {\n    return new Cell( cellElem, this );\n  }, this );\n\n  return cells;\n};\n\nproto.getLastCell = function() {\n  return this.cells[ this.cells.length - 1 ];\n};\n\nproto.getLastSlide = function() {\n  return this.slides[ this.slides.length - 1 ];\n};\n\n// positions all cells\nproto.positionCells = function() {\n  // size all cells\n  this._sizeCells( this.cells );\n  // position all cells\n  this._positionCells( 0 );\n};\n\n/**\n * position certain cells\n * @param {Integer} index - which cell to start with\n */\nproto._positionCells = function( index ) {\n  index = index || 0;\n  // also measure maxCellHeight\n  // start 0 if positioning all cells\n  this.maxCellHeight = index ? this.maxCellHeight || 0 : 0;\n  var cellX = 0;\n  // get cellX\n  if ( index > 0 ) {\n    var startCell = this.cells[ index - 1 ];\n    cellX = startCell.x + startCell.size.outerWidth;\n  }\n  var len = this.cells.length;\n  for ( var i = index; i < len; i++ ) {\n    var cell = this.cells[i];\n    cell.setPosition( cellX );\n    cellX += cell.size.outerWidth;\n    this.maxCellHeight = Math.max( cell.size.outerHeight, this.maxCellHeight );\n  }\n  // keep track of cellX for wrap-around\n  this.slideableWidth = cellX;\n  // slides\n  this.updateSlides();\n  // contain slides target\n  this._containSlides();\n  // update slidesWidth\n  this.slidesWidth = len ? this.getLastSlide().target - this.slides[0].target : 0;\n};\n\n/**\n * cell.getSize() on multiple cells\n * @param {Array} cells - cells to size\n */\nproto._sizeCells = function( cells ) {\n  cells.forEach( function( cell ) {\n    cell.getSize();\n  } );\n};\n\n// --------------------------  -------------------------- //\n\nproto.updateSlides = function() {\n  this.slides = [];\n  if ( !this.cells.length ) {\n    return;\n  }\n\n  var slide = new Slide( this );\n  this.slides.push( slide );\n  var isOriginLeft = this.originSide == 'left';\n  var nextMargin = isOriginLeft ? 'marginRight' : 'marginLeft';\n\n  var canCellFit = this._getCanCellFit();\n\n  this.cells.forEach( function( cell, i ) {\n    // just add cell if first cell in slide\n    if ( !slide.cells.length ) {\n      slide.addCell( cell );\n      return;\n    }\n\n    var slideWidth = ( slide.outerWidth - slide.firstMargin ) +\n      ( cell.size.outerWidth - cell.size[ nextMargin ] );\n\n    if ( canCellFit.call( this, i, slideWidth ) ) {\n      slide.addCell( cell );\n    } else {\n      // doesn't fit, new slide\n      slide.updateTarget();\n\n      slide = new Slide( this );\n      this.slides.push( slide );\n      slide.addCell( cell );\n    }\n  }, this );\n  // last slide\n  slide.updateTarget();\n  // update .selectedSlide\n  this.updateSelectedSlide();\n};\n\nproto._getCanCellFit = function() {\n  var groupCells = this.options.groupCells;\n  if ( !groupCells ) {\n    return function() {\n      return false;\n    };\n  } else if ( typeof groupCells == 'number' ) {\n    // group by number. 3 -> [0,1,2], [3,4,5], ...\n    var number = parseInt( groupCells, 10 );\n    return function( i ) {\n      return ( i % number ) !== 0;\n    };\n  }\n  // default, group by width of slide\n  // parse '75%\n  var percentMatch = typeof groupCells == 'string' &&\n    groupCells.match( /^(\\d+)%$/ );\n  var percent = percentMatch ? parseInt( percentMatch[1], 10 ) / 100 : 1;\n  return function( i, slideWidth ) {\n    /* eslint-disable-next-line no-invalid-this */\n    return slideWidth <= ( this.size.innerWidth + 1 ) * percent;\n  };\n};\n\n// alias _init for jQuery plugin .flickity()\nproto._init =\nproto.reposition = function() {\n  this.positionCells();\n  this.positionSliderAtSelected();\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n  this.setCellAlign();\n  this.cursorPosition = this.size.innerWidth * this.cellAlign;\n};\n\nvar cellAlignShorthands = {\n  // cell align, then based on origin side\n  center: {\n    left: 0.5,\n    right: 0.5,\n  },\n  left: {\n    left: 0,\n    right: 1,\n  },\n  right: {\n    right: 0,\n    left: 1,\n  },\n};\n\nproto.setCellAlign = function() {\n  var shorthand = cellAlignShorthands[ this.options.cellAlign ];\n  this.cellAlign = shorthand ? shorthand[ this.originSide ] : this.options.cellAlign;\n};\n\nproto.setGallerySize = function() {\n  if ( this.options.setGallerySize ) {\n    var height = this.options.adaptiveHeight && this.selectedSlide ?\n      this.selectedSlide.height : this.maxCellHeight;\n    this.viewport.style.height = height + 'px';\n  }\n};\n\nproto._getWrapShiftCells = function() {\n  // only for wrap-around\n  if ( !this.options.wrapAround ) {\n    return;\n  }\n  // unshift previous cells\n  this._unshiftCells( this.beforeShiftCells );\n  this._unshiftCells( this.afterShiftCells );\n  // get before cells\n  // initial gap\n  var gapX = this.cursorPosition;\n  var cellIndex = this.cells.length - 1;\n  this.beforeShiftCells = this._getGapCells( gapX, cellIndex, -1 );\n  // get after cells\n  // ending gap between last cell and end of gallery viewport\n  gapX = this.size.innerWidth - this.cursorPosition;\n  // start cloning at first cell, working forwards\n  this.afterShiftCells = this._getGapCells( gapX, 0, 1 );\n};\n\nproto._getGapCells = function( gapX, cellIndex, increment ) {\n  // keep adding cells until the cover the initial gap\n  var cells = [];\n  while ( gapX > 0 ) {\n    var cell = this.cells[ cellIndex ];\n    if ( !cell ) {\n      break;\n    }\n    cells.push( cell );\n    cellIndex += increment;\n    gapX -= cell.size.outerWidth;\n  }\n  return cells;\n};\n\n// ----- contain ----- //\n\n// contain cell targets so no excess sliding\nproto._containSlides = function() {\n  if ( !this.options.contain || this.options.wrapAround || !this.cells.length ) {\n    return;\n  }\n  var isRightToLeft = this.options.rightToLeft;\n  var beginMargin = isRightToLeft ? 'marginRight' : 'marginLeft';\n  var endMargin = isRightToLeft ? 'marginLeft' : 'marginRight';\n  var contentWidth = this.slideableWidth - this.getLastCell().size[ endMargin ];\n  // content is less than gallery size\n  var isContentSmaller = contentWidth < this.size.innerWidth;\n  // bounds\n  var beginBound = this.cursorPosition + this.cells[0].size[ beginMargin ];\n  var endBound = contentWidth - this.size.innerWidth * ( 1 - this.cellAlign );\n  // contain each cell target\n  this.slides.forEach( function( slide ) {\n    if ( isContentSmaller ) {\n      // all cells fit inside gallery\n      slide.target = contentWidth * this.cellAlign;\n    } else {\n      // contain to bounds\n      slide.target = Math.max( slide.target, beginBound );\n      slide.target = Math.min( slide.target, endBound );\n    }\n  }, this );\n};\n\n// -----  ----- //\n\n/**\n * emits events via eventEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  var emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery && this.$element ) {\n    // default trigger with type if no event\n    type += this.options.namespaceJQueryEvents ? '.flickity' : '';\n    var $event = type;\n    if ( event ) {\n      // create jQuery event\n      var jQEvent = new jQuery.Event( event );\n      jQEvent.type = type;\n      $event = jQEvent;\n    }\n    this.$element.trigger( $event, args );\n  }\n};\n\n// -------------------------- select -------------------------- //\n\n/**\n * @param {Integer} index - index of the slide\n * @param {Boolean} isWrap - will wrap-around to last/first if at the end\n * @param {Boolean} isInstant - will immediately set position at selected cell\n */\nproto.select = function( index, isWrap, isInstant ) {\n  if ( !this.isActive ) {\n    return;\n  }\n  index = parseInt( index, 10 );\n  this._wrapSelect( index );\n\n  if ( this.options.wrapAround || isWrap ) {\n    index = utils.modulo( index, this.slides.length );\n  }\n  // bail if invalid index\n  if ( !this.slides[ index ] ) {\n    return;\n  }\n  var prevIndex = this.selectedIndex;\n  this.selectedIndex = index;\n  this.updateSelectedSlide();\n  if ( isInstant ) {\n    this.positionSliderAtSelected();\n  } else {\n    this.startAnimation();\n  }\n  if ( this.options.adaptiveHeight ) {\n    this.setGallerySize();\n  }\n  // events\n  this.dispatchEvent( 'select', null, [ index ] );\n  // change event if new index\n  if ( index != prevIndex ) {\n    this.dispatchEvent( 'change', null, [ index ] );\n  }\n  // old v1 event name, remove in v3\n  this.dispatchEvent('cellSelect');\n};\n\n// wraps position for wrapAround, to move to closest slide. #113\nproto._wrapSelect = function( index ) {\n  var len = this.slides.length;\n  var isWrapping = this.options.wrapAround && len > 1;\n  if ( !isWrapping ) {\n    return index;\n  }\n  var wrapIndex = utils.modulo( index, len );\n  // go to shortest\n  var delta = Math.abs( wrapIndex - this.selectedIndex );\n  var backWrapDelta = Math.abs( ( wrapIndex + len ) - this.selectedIndex );\n  var forewardWrapDelta = Math.abs( ( wrapIndex - len ) - this.selectedIndex );\n  if ( !this.isDragSelect && backWrapDelta < delta ) {\n    index += len;\n  } else if ( !this.isDragSelect && forewardWrapDelta < delta ) {\n    index -= len;\n  }\n  // wrap position so slider is within normal area\n  if ( index < 0 ) {\n    this.x -= this.slideableWidth;\n  } else if ( index >= len ) {\n    this.x += this.slideableWidth;\n  }\n};\n\nproto.previous = function( isWrap, isInstant ) {\n  this.select( this.selectedIndex - 1, isWrap, isInstant );\n};\n\nproto.next = function( isWrap, isInstant ) {\n  this.select( this.selectedIndex + 1, isWrap, isInstant );\n};\n\nproto.updateSelectedSlide = function() {\n  var slide = this.slides[ this.selectedIndex ];\n  // selectedIndex could be outside of slides, if triggered before resize()\n  if ( !slide ) {\n    return;\n  }\n  // unselect previous selected slide\n  this.unselectSelectedSlide();\n  // update new selected slide\n  this.selectedSlide = slide;\n  slide.select();\n  this.selectedCells = slide.cells;\n  this.selectedElements = slide.getCellElements();\n  // HACK: selectedCell & selectedElement is first cell in slide, backwards compatibility\n  // Remove in v3?\n  this.selectedCell = slide.cells[0];\n  this.selectedElement = this.selectedElements[0];\n};\n\nproto.unselectSelectedSlide = function() {\n  if ( this.selectedSlide ) {\n    this.selectedSlide.unselect();\n  }\n};\n\nproto.selectInitialIndex = function() {\n  var initialIndex = this.options.initialIndex;\n  // already activated, select previous selectedIndex\n  if ( this.isInitActivated ) {\n    this.select( this.selectedIndex, false, true );\n    return;\n  }\n  // select with selector string\n  if ( initialIndex && typeof initialIndex == 'string' ) {\n    var cell = this.queryCell( initialIndex );\n    if ( cell ) {\n      this.selectCell( initialIndex, false, true );\n      return;\n    }\n  }\n\n  var index = 0;\n  // select with number\n  if ( initialIndex && this.slides[ initialIndex ] ) {\n    index = initialIndex;\n  }\n  // select instantly\n  this.select( index, false, true );\n};\n\n/**\n * select slide from number or cell element\n * @param {[Element, Number]} value - zero-based index or element to select\n * @param {Boolean} isWrap - enables wrapping around for extra index\n * @param {Boolean} isInstant - disables slide animation\n */\nproto.selectCell = function( value, isWrap, isInstant ) {\n  // get cell\n  var cell = this.queryCell( value );\n  if ( !cell ) {\n    return;\n  }\n\n  var index = this.getCellSlideIndex( cell );\n  this.select( index, isWrap, isInstant );\n};\n\nproto.getCellSlideIndex = function( cell ) {\n  // get index of slides that has cell\n  for ( var i = 0; i < this.slides.length; i++ ) {\n    var slide = this.slides[i];\n    var index = slide.cells.indexOf( cell );\n    if ( index != -1 ) {\n      return i;\n    }\n  }\n};\n\n// -------------------------- get cells -------------------------- //\n\n/**\n * get Flickity.Cell, given an Element\n * @param {Element} elem - matching cell element\n * @returns {Flickity.Cell} cell - matching cell\n */\nproto.getCell = function( elem ) {\n  // loop through cells to get the one that matches\n  for ( var i = 0; i < this.cells.length; i++ ) {\n    var cell = this.cells[i];\n    if ( cell.element == elem ) {\n      return cell;\n    }\n  }\n};\n\n/**\n * get collection of Flickity.Cells, given Elements\n * @param {[Element, Array, NodeList]} elems - multiple elements\n * @returns {Array} cells - Flickity.Cells\n */\nproto.getCells = function( elems ) {\n  elems = utils.makeArray( elems );\n  var cells = [];\n  elems.forEach( function( elem ) {\n    var cell = this.getCell( elem );\n    if ( cell ) {\n      cells.push( cell );\n    }\n  }, this );\n  return cells;\n};\n\n/**\n * get cell elements\n * @returns {Array} cellElems\n */\nproto.getCellElements = function() {\n  return this.cells.map( function( cell ) {\n    return cell.element;\n  } );\n};\n\n/**\n * get parent cell from an element\n * @param {Element} elem - child element\n * @returns {Flickit.Cell} cell - parent cell\n */\nproto.getParentCell = function( elem ) {\n  // first check if elem is cell\n  var cell = this.getCell( elem );\n  if ( cell ) {\n    return cell;\n  }\n  // try to get parent cell elem\n  elem = utils.getParent( elem, '.flickity-slider > *' );\n  return this.getCell( elem );\n};\n\n/**\n * get cells adjacent to a slide\n * @param {Integer} adjCount - number of adjacent slides\n * @param {Integer} index - index of slide to start\n * @returns {Array} cells - array of Flickity.Cells\n */\nproto.getAdjacentCellElements = function( adjCount, index ) {\n  if ( !adjCount ) {\n    return this.selectedSlide.getCellElements();\n  }\n  index = index === undefined ? this.selectedIndex : index;\n\n  var len = this.slides.length;\n  if ( 1 + ( adjCount * 2 ) >= len ) {\n    return this.getCellElements();\n  }\n\n  var cellElems = [];\n  for ( var i = index - adjCount; i <= index + adjCount; i++ ) {\n    var slideIndex = this.options.wrapAround ? utils.modulo( i, len ) : i;\n    var slide = this.slides[ slideIndex ];\n    if ( slide ) {\n      cellElems = cellElems.concat( slide.getCellElements() );\n    }\n  }\n  return cellElems;\n};\n\n/**\n * select slide from number or cell element\n * @param {[Element, String, Number]} selector - element, selector string, or index\n * @returns {Flickity.Cell} - matching cell\n */\nproto.queryCell = function( selector ) {\n  if ( typeof selector == 'number' ) {\n    // use number as index\n    return this.cells[ selector ];\n  }\n  if ( typeof selector == 'string' ) {\n    // do not select invalid selectors from hash: #123, #/. #791\n    if ( selector.match( /^[#.]?[\\d/]/ ) ) {\n      return;\n    }\n    // use string as selector, get element\n    selector = this.element.querySelector( selector );\n  }\n  // get cell from element\n  return this.getCell( selector );\n};\n\n// -------------------------- events -------------------------- //\n\nproto.uiChange = function() {\n  this.emitEvent('uiChange');\n};\n\n// keep focus on element when child UI elements are clicked\nproto.childUIPointerDown = function( event ) {\n  // HACK iOS does not allow touch events to bubble up?!\n  if ( event.type != 'touchstart' ) {\n    event.preventDefault();\n  }\n  this.focus();\n};\n\n// ----- resize ----- //\n\nproto.onresize = function() {\n  this.watchCSS();\n  this.resize();\n};\n\nutils.debounceMethod( Flickity, 'onresize', 150 );\n\nproto.resize = function() {\n  // #1177 disable resize behavior when animating or dragging for iOS 15\n  if ( !this.isActive || this.isAnimating || this.isDragging ) {\n    return;\n  }\n  this.getSize();\n  // wrap values\n  if ( this.options.wrapAround ) {\n    this.x = utils.modulo( this.x, this.slideableWidth );\n  }\n  this.positionCells();\n  this._getWrapShiftCells();\n  this.setGallerySize();\n  this.emitEvent('resize');\n  // update selected index for group slides, instant\n  // TODO: position can be lost between groups of various numbers\n  var selectedElement = this.selectedElements && this.selectedElements[0];\n  this.selectCell( selectedElement, false, true );\n};\n\n// watches the :after property, activates/deactivates\nproto.watchCSS = function() {\n  var watchOption = this.options.watchCSS;\n  if ( !watchOption ) {\n    return;\n  }\n\n  var afterContent = getComputedStyle( this.element, ':after' ).content;\n  // activate if :after { content: 'flickity' }\n  if ( afterContent.indexOf('flickity') != -1 ) {\n    this.activate();\n  } else {\n    this.deactivate();\n  }\n};\n\n// ----- keydown ----- //\n\n// go previous/next if left/right keys pressed\nproto.onkeydown = function( event ) {\n  // only work if element is in focus\n  var isNotFocused = document.activeElement && document.activeElement != this.element;\n  if ( !this.options.accessibility || isNotFocused ) {\n    return;\n  }\n\n  var handler = Flickity.keyboardHandlers[ event.keyCode ];\n  if ( handler ) {\n    handler.call( this );\n  }\n};\n\nFlickity.keyboardHandlers = {\n  // left arrow\n  37: function() {\n    var leftMethod = this.options.rightToLeft ? 'next' : 'previous';\n    this.uiChange();\n    this[ leftMethod ]();\n  },\n  // right arrow\n  39: function() {\n    var rightMethod = this.options.rightToLeft ? 'previous' : 'next';\n    this.uiChange();\n    this[ rightMethod ]();\n  },\n};\n\n// ----- focus ----- //\n\nproto.focus = function() {\n  // TODO remove scrollTo once focus options gets more support\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus ...\n  //    #Browser_compatibility\n  var prevScrollY = window.pageYOffset;\n  this.element.focus({ preventScroll: true });\n  // hack to fix scroll jump after focus, #76\n  if ( window.pageYOffset != prevScrollY ) {\n    window.scrollTo( window.pageXOffset, prevScrollY );\n  }\n};\n\n// -------------------------- destroy -------------------------- //\n\n// deactivate all Flickity functionality, but keep stuff available\nproto.deactivate = function() {\n  if ( !this.isActive ) {\n    return;\n  }\n  this.element.classList.remove('flickity-enabled');\n  this.element.classList.remove('flickity-rtl');\n  this.unselectSelectedSlide();\n  // destroy cells\n  this.cells.forEach( function( cell ) {\n    cell.destroy();\n  } );\n  this.element.removeChild( this.viewport );\n  // move child elements back into element\n  moveElements( this.slider.children, this.element );\n  if ( this.options.accessibility ) {\n    this.element.removeAttribute('tabIndex');\n    this.element.removeEventListener( 'keydown', this );\n  }\n  // set flags\n  this.isActive = false;\n  this.emitEvent('deactivate');\n};\n\nproto.destroy = function() {\n  this.deactivate();\n  window.removeEventListener( 'resize', this );\n  this.allOff();\n  this.emitEvent('destroy');\n  if ( jQuery && this.$element ) {\n    jQuery.removeData( this.element, 'flickity' );\n  }\n  delete this.element.flickityGUID;\n  delete instances[ this.guid ];\n};\n\n// -------------------------- prototype -------------------------- //\n\nutils.extend( proto, animatePrototype );\n\n// -------------------------- extras -------------------------- //\n\n/**\n * get Flickity instance from element\n * @param {[Element, String]} elem - element or selector string\n * @returns {Flickity} - Flickity instance\n */\nFlickity.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.flickityGUID;\n  return id && instances[ id ];\n};\n\nutils.htmlInit( Flickity, 'flickity' );\n\nif ( jQuery && jQuery.bridget ) {\n  jQuery.bridget( 'flickity', Flickity );\n}\n\n// set internal jQuery, for Webpack + jQuery v3, #478\nFlickity.setJQuery = function( jq ) {\n  jQuery = jq;\n};\n\nFlickity.Cell = Cell;\nFlickity.Slide = Slide;\n\nreturn Flickity;\n\n} ) );\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}